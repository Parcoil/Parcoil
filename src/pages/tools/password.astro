---
import Layout from "../../components/Layout.astro";
const { title } = Astro.props;
---


<Layout title="404" class="">
<div class="container text-center flex justify-center ">

    <div class="wrapper card text-center flex justify-center ">
        <div class="input-box search-container" >
            <input type="text" disabled id="search-bar" >
            <span class="material-symbols-rounded">copy_all</span>
        </div>
        <div class="pass-indicator"></div>
        <div class="pass-length">
            <div class="details">
                <label class="title">Password Length</label>
                <span></span>
            </div>
            <input type="range" min="1" max="45" value="15" step="1" class="w-full mt-2">
        </div>

        <div class="pass-settings">
            <label class="title">Pass Settings</label>
            <ul class="options">
                <li class="option">
                    <input type="checkbox" id="lowercase" checked>
                    <label for="lowercase">Lowercase (a-z)</label>
                </li>
                <li class="option">
                    <input type="checkbox" id="uppercase" checked>
                    <label for="uppercase">Uppercase (A-Z)</label>
                </li>
                <li class="option">
                    <input type="checkbox" id="numbers" checked>
                    <label for="numbers">Numbers (0-9)</label>
                </li>
                <li class="option">
                    <input type="checkbox" id="symbols"checked>
                    <label for="symbols">Symbols (!-$^+)</label>
                </li>
                <li class="option">
                    <input type="checkbox" id="exc-duplicate">
                    <label for="exc-duplicate">Exclude Duplicate</label>
                </li>
                <li class="option">
                    <input type="checkbox" id="spaces">
                    <label for="spaces">Include Spaces</label>
                </li>
            </ul>
        </div>

        <button class="btn btn-primary generate-btn">Generate Password</button>

    </div>
</div>



</Layout>
<script>
    const lengthSlider = document.querySelector(".pass-length input");
const options = document.querySelectorAll(".option input");
const copyIcon = document.querySelector(".input-box span");
const passwordInput = document.querySelector(".input-box input");
const passIndicator = document.querySelector(".pass-indicator");
const generateBtn = document.querySelector(".generate-btn");

const characters = {
  lowercase: "abcdefghijklmnopqrstuvwxyz",
  uppercase: "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
  numbers: "0123456789",
  symbols: "!$%&|[](){}:;.,*+-#@<>~",
};

const generatePassword = () => {
  let staticPassword = "",
    randomPassword = "",
    excludeDuplicate = false,
    passLength = lengthSlider.value;

  options.forEach((option) => {
    if (option.checked) {
      if (option.id !== "exc-duplicate" && option.id !== "spaces") {
        staticPassword += characters[option.id];
      } else if (option.id === "spaces") {
        staticPassword += `  ${staticPassword}  `;
      } else {
        excludeDuplicate = true;
      }
    }
  });

  for (let i = 0; i < passLength; i++) {
    let randomChar =
      staticPassword[Math.floor(Math.random() * staticPassword.length)];
    if (excludeDuplicate) {
      !randomPassword.includes(randomChar) || randomChar == " "
        ? (randomPassword += randomChar)
        : i--;
    } else {
      randomPassword += randomChar;
    }
  }
  passwordInput.value = randomPassword;
};

const updatePassIndicator = () => {
  passIndicator.id =
    lengthSlider.value <= 8
      ? "weak"
      : lengthSlider.value <= 16
      ? "medium"
      : "strong";
};

const updateSlider = () => {
  document.querySelector(".pass-length span").innerText = lengthSlider.value;
  generatePassword();
  updatePassIndicator();
};
updateSlider();

const copyPassword = () => {
  navigator.clipboard.writeText(passwordInput.value);
  copyIcon.innerText = "check";
  copyIcon.style.color = "#4285f4";
  setTimeout(() => {
    copyIcon.innerText = "copy_all";
    copyIcon.style.color = "#707070";
  }, 1500);
};

copyIcon.addEventListener("click", copyPassword);
lengthSlider.addEventListener("input", updateSlider);
generateBtn.addEventListener("click", generatePassword);

</script>